// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MailRelay Stack snapshot test 1`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs20.x",
      },
      "cn-northwest-1": {
        "value": "nodejs20.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs20.x",
      },
      "us-gov-west-1": {
        "value": "nodejs20.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "DKIMRecordEC3F386B": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "sig1._domainkey.test-domain.com.",
        "ResourceRecords": [
          "sig1.dkim.test-domain.com.at.icloudmailadmin.com",
        ],
        "TTL": "108000",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "HostedZoneDB99F866": {
      "Properties": {
        "Name": "test-domain.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "MXRecord3FB0AC94": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "test-domain.com.",
        "ResourceRecords": [
          "10 mx01.mail.icloud.com",
          "20 mx02.mail.icloud.com",
        ],
        "TTL": "108000",
        "Type": "MX",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RedirectRedirectAliasRecordSixd4c934C08A6583": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "RedirectRedirectDistributionCFDistribution9866C854",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "test-domain.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RedirectRedirectAliasRecordd4c9348C68B4F6": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "RedirectRedirectDistributionCFDistribution9866C854",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "test-domain.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RedirectRedirectBucketC989E6F1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "WebsiteConfiguration": {
          "RedirectAllRequestsTo": {
            "HostName": "target-domain.com",
            "Protocol": "https",
          },
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RedirectRedirectCertificateCertificateRequestorFunction6922BC5C": {
      "DependsOn": [
        "RedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF6E20B96",
        "RedirectRedirectCertificateCertificateRequestorFunctionServiceRole07F91D2B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "RedirectRedirectCertificateCertificateRequestorFunctionServiceRole07F91D2B",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RedirectRedirectCertificateCertificateRequestorFunctionServiceRole07F91D2B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF6E20B96": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "route53:ChangeResourceRecordSetsActions": [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                    "*.test-domain.com",
                    "*.test-domain.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/",
                    {
                      "Ref": "HostedZoneDB99F866",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF6E20B96",
        "Roles": [
          {
            "Ref": "RedirectRedirectCertificateCertificateRequestorFunctionServiceRole07F91D2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RedirectRedirectCertificateCertificateRequestorResource9F9673DE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "test-domain.com",
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "RedirectRedirectCertificateCertificateRequestorFunction6922BC5C",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": [
          "test-domain.com",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RedirectRedirectDistributionCFDistribution9866C854": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "test-domain.com",
          ],
          "Comment": "Redirect to target-domain.com from test-domain.com",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
            ],
            "CachedMethods": [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "http-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "RedirectRedirectBucketC989E6F1",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "origin1",
            },
          ],
          "PriceClass": "PriceClass_All",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "RedirectRedirectCertificateCertificateRequestorResource9F9673DE",
                "Arn",
              ],
            },
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "SPFRecord01D5BF48": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "test-domain.com.",
        "ResourceRecords": [
          ""v=spf1 include:icloud.com ~all"",
        ],
        "TTL": "108000",
        "Type": "TXT",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "TXTRecordA3427B34": {
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "test-domain.com.",
        "ResourceRecords": [
          ""apple-domain=4Y5uzvmHnOKnBLil"",
        ],
        "TTL": "108000",
        "Type": "TXT",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
